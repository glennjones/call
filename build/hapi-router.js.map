{"version":3,"file":null,"sources":["../browser/hoek.js","../browser/boom.js","../lib/regex.js","../lib/segment.js","../lib/index.js","../browser/index.js"],"sourcesContent":["'use strict';\n// basic replacement for HAPI.js Hoek module\n\n\nmodule.exports = {\n\n    applyToDefaults: function (obj, src) {\n        for (var key in src) {\n            if (src.hasOwnProperty(key)) obj[key] = src[key];\n        }\n        return obj;\n    },\n\n    escapeRegex: function (string) {\n\n        // Escape ^$.*+-?=!:|\\/()[]{},\n        return string.replace(/[\\^\\$\\.\\*\\+\\-\\?\\=\\!\\:\\|\\\\\\/\\(\\)\\[\\]\\{\\}\\,]/g, '\\\\$&');\n    },\n\n    assert: function (condition, message) {\n        if(!condition){\n            throw new Error(message);\n        }\n    }\n}\n","'use strict';\n// basic replacement for HAPI.js Boom module\n\n\nmodule.exports = {\n\n    notFound: function () {\n\n        return null;\n    },\n\n    badRequest: function () {\n\n        return null;\n    }\n}\n","'use strict';\n\n// Load modules\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.generate = function () {\n\n    /*\n        /path/{param}/path/{param?}\n        /path/{param*2}/path\n        /path/{param*2}\n        /path/x{param}x\n        /{param*}\n    */\n\n    const empty = '(?:^\\\\/$)';\n\n    const legalChars = '[\\\\w\\\\!\\\\$&\\'\\\\(\\\\)\\\\*\\\\+\\\\,;\\\\=\\\\:@\\\\-\\\\.~]';\n    const encoded = '%[A-F0-9]{2}';\n\n    const literalChar = '(?:' + legalChars + '|' + encoded + ')';\n    const literal = literalChar + '+';\n    const literalOptional = literalChar + '*';\n\n    const midParam = '(?:\\\\{\\\\w+(?:\\\\*[1-9]\\\\d*)?\\\\})';                               // {p}, {p*2}\n    const endParam = '(?:\\\\/(?:\\\\{\\\\w+(?:(?:\\\\*(?:[1-9]\\\\d*)?)|(?:\\\\?))?\\\\})?)?';     // {p}, {p*2}, {p*}, {p?}\n\n    const partialParam = '(?:\\\\{\\\\w+\\\\??\\\\})';                                        // {p}, {p?}\n    const mixedParam = '(?:(?:' + literal + partialParam + ')+' + literalOptional + ')|(?:' + partialParam + '(?:' + literal + partialParam + ')+' + literalOptional + ')|(?:' + partialParam + literal + ')';\n\n    const segmentContent = '(?:' + literal + '|' + midParam + '|' + mixedParam + ')';\n    const segment = '\\\\/' + segmentContent;\n    const segments = '(?:' + segment + ')*';\n\n    const path = '(?:^' + segments + endParam + '$)';\n\n    //                1:literal               2:name   3:*  4:count  5:?\n    const parseParam = '(' + literal + ')|(?:\\\\{(\\\\w+)(?:(\\\\*)(\\\\d+)?)?(\\\\?)?\\\\})';\n\n    const expressions = {\n        parseParam: new RegExp(parseParam, 'g'),\n        validatePath: new RegExp(empty + '|' + path),\n        validatePathEncoded: /%(?:2[146-9A-E]|3[\\dABD]|4[\\dA-F]|5[\\dAF]|6[1-9A-F]|7[\\dAE])/g\n    };\n\n    return expressions;\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports = module.exports = internals.Segment = function () {\n\n    this._edge = null;              // { segment, record }\n    this._fulls = null;             // { path: { segment, record }\n    this._literals = null;          // { literal: { segment, <node> } }\n    this._param = null;             // <node>\n    this._mixed = null;             // [{ segment, <node> }]\n    this._wildcard = null;          // { segment, record }\n};\n\n\ninternals.Segment.prototype.add = function (segments, record) {\n\n    /*\n        { literal: 'x' }        -> x\n        { empty: false }        -> {p}\n        { wildcard: true }      -> {p*}\n        { mixed: /regex/ }      -> a{p}b\n    */\n\n    const current = segments[0];\n    const remaining = segments.slice(1);\n    const isEdge = !remaining.length;\n\n    const literals = [];\n    let isLiteral = true;\n    for (let i = 0; i < segments.length && isLiteral; ++i) {\n        isLiteral = segments[i].literal !== undefined;\n        literals.push(segments[i].literal);\n    }\n\n    if (isLiteral) {\n        this._fulls = this._fulls || {};\n        let literal = '/' + literals.join('/');\n        if (!record.settings.isCaseSensitive) {\n            literal = literal.toLowerCase();\n        }\n\n        Hoek.assert(!this._fulls[literal], 'New route', record.path, 'conflicts with existing', this._fulls[literal] && this._fulls[literal].record.path);\n        this._fulls[literal] = { segment: current, record: record };\n    }\n    else if (current.literal !== undefined) {               // Can be empty string\n\n        // Literal\n\n        this._literals = this._literals || {};\n        const currentLiteral = (record.settings.isCaseSensitive ? current.literal : current.literal.toLowerCase());\n        this._literals[currentLiteral] = this._literals[currentLiteral] || new internals.Segment();\n        this._literals[currentLiteral].add(remaining, record);\n    }\n    else if (current.wildcard) {\n\n        // Wildcard\n\n        Hoek.assert(!this._wildcard, 'New route', record.path, 'conflicts with existing', this._wildcard && this._wildcard.record.path);\n        Hoek.assert(!this._param || !this._param._wildcard, 'New route', record.path, 'conflicts with existing', this._param && this._param._wildcard && this._param._wildcard.record.path);\n        this._wildcard = { segment: current, record: record };\n    }\n    else if (current.mixed) {\n\n        // Mixed\n\n        this._mixed = this._mixed || [];\n\n        let mixed = this._mixedLookup(current);\n        if (!mixed) {\n            mixed = { segment: current, node: new internals.Segment() };\n            this._mixed.push(mixed);\n            this._mixed.sort(internals.mixed);\n        }\n\n        if (isEdge) {\n            Hoek.assert(!mixed.node._edge, 'New route', record.path, 'conflicts with existing', mixed.node._edge && mixed.node._edge.record.path);\n            mixed.node._edge = { segment: current, record: record };\n        }\n        else {\n            mixed.node.add(remaining, record);\n        }\n    }\n    else {\n\n        // Parameter\n\n        this._param = this._param || new internals.Segment();\n\n        if (isEdge) {\n            Hoek.assert(!this._param._edge, 'New route', record.path, 'conflicts with existing', this._param._edge && this._param._edge.record.path);\n            this._param._edge = { segment: current, record: record };\n        }\n        else {\n            Hoek.assert(!this._wildcard || !remaining[0].wildcard, 'New route', record.path, 'conflicts with existing', this._wildcard && this._wildcard.record.path);\n            this._param.add(remaining, record);\n        }\n    }\n};\n\n\ninternals.Segment.prototype._mixedLookup = function (segment) {\n\n    for (let i = 0; i < this._mixed.length; ++i) {\n        if (internals.mixed({ segment: segment }, this._mixed[i]) === 0) {\n            return this._mixed[i];\n        }\n    }\n\n    return null;\n};\n\n\ninternals.mixed = function (a, b) {\n\n    const aFirst = -1;\n    const bFirst = 1;\n\n    const as = a.segment;\n    const bs = b.segment;\n\n    if (as.length !== bs.length) {\n        return (as.length > bs.length ? aFirst : bFirst);\n    }\n\n    if (as.first !== bs.first) {\n        return (as.first ? bFirst : aFirst);\n    }\n\n    for (let i = 0; i < as.segments.length; ++i) {\n        const am = as.segments[i];\n        const bm = bs.segments[i];\n\n        if (am === bm) {\n            continue;\n        }\n\n        if (am.length === bm.length) {\n            return (am > bm ? bFirst : aFirst);\n        }\n\n        return (am.length < bm.length ? bFirst : aFirst);\n    }\n\n    return 0;\n};\n\n\ninternals.Segment.prototype.lookup = function (path, segments, options) {\n\n    let match = null;\n\n    // Literal edge\n\n    if (this._fulls) {\n        match = this._fulls[options.isCaseSensitive ? path : path.toLowerCase()];\n        if (match) {\n            return { record: match.record, array: [] };\n        }\n    }\n\n    // Literal node\n\n    const current = segments[0];\n    const nextPath = path.slice(current.length + 1);\n    const remainder = (segments.length > 1 ? segments.slice(1) : null);\n\n    if (this._literals) {\n        const literal = options.isCaseSensitive ? current : current.toLowerCase();\n        match = this._literals.hasOwnProperty(literal) && this._literals[literal];\n        if (match) {\n            const record = internals.deeper(match, nextPath, remainder, [], options);\n            if (record) {\n                return record;\n            }\n        }\n    }\n\n    // Mixed\n\n    if (this._mixed) {\n        for (let i = 0; i < this._mixed.length; ++i) {\n            match = this._mixed[i];\n            const params = current.match(match.segment.mixed);\n            if (params) {\n                const array = [];\n                for (let j = 1; j < params.length; ++j) {\n                    array.push(params[j]);\n                }\n\n                const record = internals.deeper(match.node, nextPath, remainder, array, options);\n                if (record) {\n                    return record;\n                }\n            }\n        }\n    }\n\n    // Param\n\n    if (this._param) {\n        if (current ||\n            (this._param._edge && this._param._edge.segment.empty)) {\n\n            const record = internals.deeper(this._param, nextPath, remainder, [current], options);\n            if (record) {\n                return record;\n            }\n        }\n    }\n\n    // Wildcard\n\n    if (this._wildcard) {\n        return { record: this._wildcard.record, array: [path.slice(1)] };\n    }\n\n    return null;\n};\n\n\ninternals.deeper = function (match, path, segments, array, options) {\n\n    if (!segments) {\n        if (match._edge) {\n            return { record: match._edge.record, array: array };\n        }\n\n        if (match._wildcard) {\n            return { record: match._wildcard.record, array: array };\n        }\n    }\n    else {\n        const result = match.lookup(path, segments, options);\n        if (result) {\n            return { record: result.record, array: array.concat(result.array) };\n        }\n    }\n\n    return null;\n};\n","'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\nconst Boom = require('boom');\nconst Regex = require('./regex');\nconst Segment = require('./segment');\n\n\n// Declare internals\n\nconst internals = {\n    pathRegex: Regex.generate(),\n    defaults: {\n        isCaseSensitive: true\n    }\n};\n\n\nexports.Router = internals.Router = function (options) {\n\n    this.settings = Hoek.applyToDefaults(internals.defaults, options || {});\n\n    this.routes = {};                               // Key: HTTP method or * for catch-all, value: sorted array of routes\n    this.ids = {};                                  // Key: route id, value: record\n    this.vhosts = null;                             // {} where Key: hostname, value: see this.routes\n\n    this.specials = {\n        badRequest: null,\n        notFound: null,\n        options: null\n    };\n};\n\n\ninternals.Router.prototype.add = function (config, route) {\n\n    const method = config.method.toLowerCase();\n\n    const vhost = config.vhost || '*';\n    if (vhost !== '*') {\n        this.vhosts = this.vhosts || {};\n        this.vhosts[vhost] = this.vhosts[vhost] || {};\n    }\n\n    const table = (vhost === '*' ? this.routes : this.vhosts[vhost]);\n    table[method] = table[method] || { routes: [], router: new Segment() };\n\n    const analysis = config.analysis || this.analyze(config.path);\n    const record = {\n        path: config.path,\n        route: route || config.path,\n        segments: analysis.segments,\n        params: analysis.params,\n        fingerprint: analysis.fingerprint,\n        settings: this.settings\n    };\n\n    // Add route\n\n    table[method].router.add(analysis.segments, record);\n    table[method].routes.push(record);\n    table[method].routes.sort(internals.sort);\n\n    const last = record.segments[record.segments.length - 1];\n    if (last.empty) {\n        table[method].router.add(analysis.segments.slice(0, -1), record);\n    }\n\n    if (config.id) {\n        Hoek.assert(!this.ids[config.id], 'Route id', config.id, 'for path', config.path, 'conflicts with existing path', this.ids[config.id] && this.ids[config.id].path);\n        this.ids[config.id] = record;\n    }\n\n    return record;\n};\n\n\ninternals.Router.prototype.special = function (type, route) {\n\n    Hoek.assert(Object.keys(this.specials).indexOf(type) !== -1, 'Unknown special route type:', type);\n\n    this.specials[type] = { route: route };\n};\n\n\ninternals.Router.prototype.route = function (method, path, hostname) {\n\n    const segments = path.split('/').slice(1);\n\n    const vhost = (this.vhosts && hostname && this.vhosts[hostname]);\n    const route = (vhost && this._lookup(path, segments, vhost, method)) ||\n                this._lookup(path, segments, this.routes, method) ||\n                (method === 'head' && vhost && this._lookup(path, segments, vhost, 'get')) ||\n                (method === 'head' && this._lookup(path, segments, this.routes, 'get')) ||\n                (method === 'options' && this.specials.options) ||\n                (vhost && this._lookup(path, segments, vhost, '*')) ||\n                this._lookup(path, segments, this.routes, '*') ||\n                this.specials.notFound || Boom.notFound();\n\n    return route;\n};\n\n\ninternals.Router.prototype._lookup = function (path, segments, table, method) {\n\n    const set = table[method];\n    if (!set) {\n        return null;\n    }\n\n    const match = set.router.lookup(path, segments, this.settings);\n    if (!match) {\n        return null;\n    }\n\n    const assignments = {};\n    const array = [];\n    for (let i = 0; i < match.array.length; ++i) {\n        const name = match.record.params[i];\n        let value = match.array[i];\n        if (value) {\n            value = internals.decode(value);\n            if (value.isBoom) {\n                return this.specials.badRequest || value;\n            }\n\n            if (assignments[name] !== undefined) {\n                assignments[name] = assignments[name] + '/' + value;\n            }\n            else {\n                assignments[name] = value;\n            }\n\n            if (i + 1 === match.array.length ||\n                name !== match.record.params[i + 1]) {\n\n                array.push(assignments[name]);\n            }\n        }\n    }\n\n    return { params: assignments, paramsArray: array, route: match.record.route };\n};\n\n\ninternals.decode = function (value) {\n\n    try {\n        return decodeURIComponent(value);\n    }\n    catch (err) {\n        return Boom.badRequest('Invalid request path');\n    }\n};\n\n\ninternals.Router.prototype.normalize = function (path) {\n\n    if (path &&\n        path.indexOf('%') !== -1) {\n\n        // Uppercase %encoded values\n\n        const uppercase = path.replace(/%[0-9a-fA-F][0-9a-fA-F]/g, (encoded) => encoded.toUpperCase());\n\n        // Decode non-reserved path characters: a-z A-Z 0-9 _!$&'()*+,;=:@-.~\n        // ! (%21) $ (%24) & (%26) ' (%27) ( (%28) ) (%29) * (%2A) + (%2B) , (%2C) - (%2D) . (%2E)\n        // 0-9 (%30-39) : (%3A) ; (%3B) = (%3D)\n        // @ (%40) A-Z (%41-5A) _ (%5F) a-z (%61-7A) ~ (%7E)\n\n        const decoded = uppercase.replace(/%(?:2[146-9A-E]|3[\\dABD]|4[\\dA-F]|5[\\dAF]|6[1-9A-F]|7[\\dAE])/g, (encoded) => String.fromCharCode(parseInt(encoded.substring(1), 16)));\n\n        path = decoded;\n    }\n\n    return path;\n};\n\n\ninternals.Router.prototype.analyze = function (path) {\n\n    Hoek.assert(internals.pathRegex.validatePath.test(path), 'Invalid path:', path);\n    Hoek.assert(!internals.pathRegex.validatePathEncoded.test(path), 'Path cannot contain encoded non-reserved path characters:', path);\n\n    const pathParts = path.split('/');\n    const segments = [];\n    const params = [];\n    const fingers = [];\n\n    for (let i = 1; i < pathParts.length; ++i) {                            // Skip first empty segment\n        let segment = pathParts[i];\n\n        // Literal\n\n        if (segment.indexOf('{') === -1) {\n            segment = this.settings.isCaseSensitive ? segment : segment.toLowerCase();\n            fingers.push(segment);\n            segments.push({ literal: segment });\n            continue;\n        }\n\n        // Parameter\n\n        const parts = internals.parseParams(segment);\n        if (parts.length === 1) {\n\n            // Simple parameter\n\n            const item = parts[0];\n            Hoek.assert(params.indexOf(item.name) === -1, 'Cannot repeat the same parameter name:', item.name, 'in:', path);\n            params.push(item.name);\n\n            if (item.wilcard) {\n                if (item.count) {\n                    for (let j = 0; j < item.count; ++j) {\n                        fingers.push('?');\n                        segments.push({});\n                        if (j) {\n                            params.push(item.name);\n                        }\n                    }\n                }\n                else {\n                    fingers.push('#');\n                    segments.push({ wildcard: true });\n                }\n            }\n            else {\n                fingers.push('?');\n                segments.push({ empty: item.empty });\n            }\n        }\n        else {\n\n            // Mixed parameter\n\n            const seg = {\n                length: parts.length,\n                first: typeof parts[0] !== 'string',\n                segments: []\n            };\n\n            let finger = '';\n            let regex = '^';\n            for (let j = 0; j < parts.length; ++j) {\n                const part = parts[j];\n                if (typeof part === 'string') {\n                    finger = finger + part;\n                    regex = regex + Hoek.escapeRegex(part);\n                    seg.segments.push(part);\n                }\n                else {\n                    Hoek.assert(params.indexOf(part.name) === -1, 'Cannot repeat the same parameter name:', part.name, 'in:', path);\n                    params.push(part.name);\n\n                    finger = finger + '?';\n                    regex = regex + '(.' + (part.empty ? '*' : '+') + ')';\n                }\n            }\n\n            seg.mixed = new RegExp(regex + '$', (!this.settings.isCaseSensitive ? 'i' : ''));\n            fingers.push(finger);\n            segments.push(seg);\n        }\n    }\n\n    return {\n        segments: segments,\n        fingerprint: '/' + fingers.join('/'),\n        params: params\n    };\n};\n\n\ninternals.parseParams = function (segment) {\n\n    const parts = [];\n    segment.replace(internals.pathRegex.parseParam, (match, literal, name, wilcard, count, empty) => {\n\n        if (literal) {\n            parts.push(literal);\n        }\n        else {\n            parts.push({\n                name: name,\n                wilcard: !!wilcard,\n                count: count && parseInt(count, 10),\n                empty: !!empty\n            });\n        }\n\n        return '';\n    });\n\n    return parts;\n};\n\n\ninternals.Router.prototype.table = function (host) {\n\n    const result = [];\n    const collect = (table) => {\n\n        if (!table) {\n            return;\n        }\n\n        Object.keys(table).forEach((method) => {\n\n            table[method].routes.forEach((record) => {\n\n                result.push(record.route);\n            });\n        });\n    };\n\n    if (this.vhosts) {\n        const vhosts = host ? [].concat(host) : Object.keys(this.vhosts);\n        for (let i = 0; i < vhosts.length; ++i) {\n            collect(this.vhosts[vhosts[i]]);\n        }\n    }\n\n    collect(this.routes);\n\n    return result;\n};\n\n\ninternals.sort = function (a, b) {\n\n    const aFirst = -1;\n    const bFirst = 1;\n\n    const as = a.segments;\n    const bs = b.segments;\n\n    if (as.length !== bs.length) {\n        return (as.length > bs.length ? bFirst : aFirst);\n    }\n\n    for (let i = 0; ; ++i) {\n        if (as[i].literal) {\n            if (bs[i].literal) {\n                if (as[i].literal === bs[i].literal) {\n                    continue;\n                }\n\n                return (as[i].literal > bs[i].literal ? bFirst : aFirst);\n            }\n            return aFirst;\n        }\n        else if (bs[i].literal) {\n            return bFirst;\n        }\n\n        return (as[i].wildcard ? bFirst : aFirst);\n    }\n};\n","'use strict';\n// pulls in node module and export with rollup\n\nimport CallRouter from '../lib/index';\n\n\nfunction urltoPath(url) {\n\n    if (!url || url.trim() === '') {\n        throw new Error('No url provided');\n    }\n    return new URL(url).pathname;\n}\n\n\nfunction normalisePath(path, options) {\n\n    checkStructure( path, 'path' );\n    var url = new URL('http://example.org' + path);\n    if (endsWith(url.pathname, '/')) {\n        url.pathname = url.pathname.slice(0, -1);\n    }\n    return url.pathname;\n}\n\n\nfunction normaliseRoute( route ) {\n\n    checkStructure( route, 'route' );\n    if (endsWith(route, '/')) {\n        route = route.slice(0, -1);\n    }\n    return route;\n}\n\n\nfunction checkStructure( str, name ){\n\n    if (!str || str.trim() === '') {\n        throw new Error('No ' + name + ' provided');\n    }\n    if (str.indexOf('/') !== 0) {\n        throw new Error('The ' + name + ' does not start with a backslash');\n    }\n}\n\n\nfunction endsWith(str, match, position) {\n    if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > str.length) {\n        position = str.length;\n    }\n    position -= match.length;\n    var lastIndex = str.lastIndexOf(match, position);\n    return lastIndex !== -1 && lastIndex === position;\n}\n\n\nCallRouter.urltoPath = urltoPath;\nCallRouter.normaliseRoute = normaliseRoute;\nCallRouter.normalisePath = normalisePath;\n\n\nexport default CallRouter\n"],"names":["exports","obj","src","key","hasOwnProperty","string","replace","condition","message","Error","internals","generate","empty","legalChars","encoded","literalChar","literal","literalOptional","midParam","endParam","partialParam","mixedParam","segmentContent","segment","segments","path","parseParam","expressions","RegExp","Hoek","commonjsHelpers","module","Segment","_edge","_fulls","_literals","_param","_mixed","_wildcard","prototype","add","record","current","remaining","slice","isEdge","length","literals","isLiteral","i","undefined","push","join","settings","isCaseSensitive","toLowerCase","assert","currentLiteral","wildcard","mixed","_mixedLookup","node","sort","a","b","aFirst","bFirst","as","bs","first","am","bm","lookup","options","match","array","nextPath","remainder","deeper","params","j","result","concat","Boom","Regex","Router","applyToDefaults","defaults","routes","ids","vhosts","specials","config","route","method","vhost","table","router","analysis","analyze","fingerprint","last","id","special","type","Object","keys","indexOf","hostname","split","_lookup","notFound","set","assignments","name","value","decode","isBoom","badRequest","paramsArray","decodeURIComponent","err","normalize","uppercase","toUpperCase","decoded","String","fromCharCode","parseInt","substring","pathRegex","validatePath","test","validatePathEncoded","pathParts","fingers","parts","parseParams","item","wilcard","count","seg","finger","regex","part","escapeRegex","host","collect","forEach","urltoPath","url","trim","URL","pathname","normalisePath","endsWith","normaliseRoute","checkStructure","str","position","isFinite","Math","floor","lastIndex","lastIndexOf","CallRouter"],"mappings":"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"}